server:
  port:  ${PORT:${SERVER_PORT:0}}
eureka:
  client:
    fetch-registry: true
    register-with-eureka:  true
    service-url:
      default-zone: http://localhost:8761/eureka
    instance:
      instance-id:  ${spring.application.name}:${spring.application.instance_id:${random.value}}  #me de una instancia aleotario 
      
      
#agregamos conf de circuit-breaker
resilience4j.circuitbreaker:
    instances:
        carrosB:
            registerHealthIndicator: true
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: TIME_BASED
            minimumNumberOfCalls: 4
            waitDurationInOpenState: 50s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
        motosB:
            registerHealthIndicator: true
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: TIME_BASED
            minimumNumberOfCalls: 4
            waitDurationInOpenState: 50s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
        todosB:
            registerHealthIndicator: true
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: TIME_BASED
            minimumNumberOfCalls: 4
            waitDurationInOpenState: 50s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
            
         
spring:
  application:
    zipkin:  http://localhost:9411
            